// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 포맷 설정: Shift + Alt + F
model User {
  id               String          @id @default(uuid())
  email            String          @unique
  firstName        String
  lastName         String
  address          String
  createdAt        DateTime        @default(now())
  updatedAt        DateTime?       @updatedAt
  orders           Order[]
  userPreference   UserPreference?
  userPreferenceId String
  savedProducts    Product[]
}

model Product {
  id          String      @id @default(uuid())
  name        String
  description String?
  category    Category
  price       Float
  stock       Int
  createAt    DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
  OrderItem   OrderItem[]
  savedUsers  User[]
}

model UserPreference {
  id           String   @id @default(uuid())
  receiveEmail Boolean
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @unique
}

model Order {
  id        String      @id @default(uuid())
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  user      User        @relation(fields: [userId], references: [id])
  userId    String // Foreign Key
  OrderItem OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid())
  unitPrice Float
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products  Product  @relation(fields: [productId], references: [id])
  productId String
  orders    Order    @relation(fields: [orderId], references: [id])
  orderId   String
}

enum Category {
  FASHION
  BEAUTY
  SPORTS
  ELECTRONICS
  HOME_INTERIOR
  HOUSEHOLD_SUPPLIES
  KITCHENWARE
}

enum OrderStatus {
  PENDING
  COMPLETE
}
